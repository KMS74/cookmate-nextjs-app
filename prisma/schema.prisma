// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}


// User model representing the application's users
model User {
  id       String    @default(uuid()) @id
  email    String   @unique
  username String   @unique 
  password String
  recipes  Recipe[] // One-to-many relationship with Recipe model
  ratings  Rating[] // One-to-many relationship with Rating model
  @@map("users") 
}

// Recipe model representing the recipes created by users
model Recipe {
  id            String     @default(uuid()) @id
  title         String
  ingredients   String[]   
  steps         String[]   
  cookingTime   Int
  imageUrls     String[]
  authorId      String     // Foreign key referencing User model
  author        User       @relation(fields: [authorId], references: [id])
  categoryId    String     // Foreign key referencing Category model
  category      Category   @relation(fields: [categoryId], references: [id])
  ratings       Rating[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime?  @updatedAt
  @@map("recipes")
}

// Category model representing the categories to which recipes belong
model Category {
  id          String     @default(uuid()) @id
  name        String
  description String
  recipes     Recipe[]
  @@map("categories")
}

// Rating model representing the ratings provided by users for recipes
model Rating {
  id        String     @default(uuid()) @id
  value     Int
  userId    String    // Foreign key referencing User model
  user      User      @relation(fields: [userId], references: [id])
  recipeId  String    // Foreign key referencing Recipe model
  recipe    Recipe    @relation(fields: [recipeId], references: [id])
  createdAt DateTime   @default(now())
  @@map("ratings")
}